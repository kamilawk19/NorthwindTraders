# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  buildConfiguration: 'Release'

stages:
- stage: 'Build'
  displayName: 'Build the application'
  jobs:
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: ubuntu-latest
      demands:
      - npm
      
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        useGlobalJson: true

    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'dotnet build $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish $(buildConfiguration)'
      inputs:
        command: publish
        publishWebProjects: False
        projects: 'Src/WebUI/WebUI.csproj'
        arguments: '--self-contained --runtime win-x86 --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'Drop'
- stage: 'Tests'
  displayName: 'Test the application'
  dependsOn: Build
  jobs:
  - job: 'Test'
    displayName: 'Test job'
    pool:
      vmImage: ubuntu-latest
      demands:
      - npm

    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        useGlobalJson: true
        
    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'dotnet build $(buildConfiguration)'
        
    - task: DotNetCoreCLI@2
      displayName: 'Run application unit tests'
      inputs:
        command: test
        arguments: --configuration $(buildConfiguration)
        publishTestResults: true
        projects: 'Tests/Application.UnitTests/*.csproj'
        
    - task: DotNetCoreCLI@2
      displayName: 'Run domain unit tests'
      inputs:
        command: test
        arguments: --configuration $(buildConfiguration)
        publishTestResults: true
        projects: 'Tests/Domain.UnitTests/*.csproj'
     
    - task: DotNetCoreCLI@2
      displayName: 'Run persistence integration tests'
      inputs:
        command: test
        arguments: --configuration $(buildConfiguration)
        publishTestResults: true
        projects: 'Tests/Persistence.IntegrationTests/*.csproj'
        
    - task: DotNetCoreCLI@2
      displayName: 'Run web UI tests'
      inputs:
        command: test
        arguments: --configuration $(buildConfiguration)
        publishTestResults: true
        projects: 'Tests/WebUI.IntegrationTests/*.csproj'
